{"version":3,"sources":["download.jpg","img.jpg","components/Resume.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","resume","props","fetch","then","res","json","data","console","log","info","profiles","location","profilesData","i","basic","className","src","Logo","alt","style","width","name","homepage","response","href","to","pathname","Home","profile","map","value","index","key","role","onClick","window","phone","email","id","App","exact","path","Resume","Homepage","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a0ae5ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.60812ef6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.6ae9ec4c.jpg\";","import React from 'react';\r\nimport data from '../data.json';\r\nimport Logo from '../img.jpg'\r\n\r\n\r\n\r\n\r\nexport default function resume(props) {\r\n    fetch(\"https//jsonplaceholder.typicode.com/posts\")\r\n    .then(res=>res.json())\r\n    .then(data=>console.log(data))\r\n    let info =data.profiles[props.location.profilesData.i]\r\n    console.log(info.basic)\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-3 m-2\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <img src={Logo} alt=\"profile Icon\" style={{width:\"10em\"}}/>\r\n                     <h1>{info.basic.name}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function homepage(props) {\r\n    fetch('https://raw.githubusercontent.com/prasadbobby/React-Shortcuts/master/data.json')\r\n    .then(response=>response.json())\r\n    .then(data=>console.log(data))\r\n\r\n    \r\nreturn (\r\n    <div className=\"nav\">\r\n        \r\n         <nav>\r\n            <h1 className=\"head\">\r\n                <a href=\"/\">HOME</a>\r\n                </h1>\r\n            <ul>\r\n                <li><Link to={{pathname:'/career'}} className=\"inner\">Career</Link></li>\r\n                <li><Link to={{pathname:'/education'}} className=\"inner\">Education</Link></li>\r\n                <li><Link to={{pathname:'/tech'}} className=\"inner\">Tech Skills</Link></li>\r\n                <li><Link to={{pathname:'/cert'}} className=\"inner\">Certifications</Link></li>\r\n            </ul>\r\n        </nav>\r\n     <div className=\"row justify-content-center\">\r\n        \r\n\r\n        <div className=\"col-lg-8 m-2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>Educational Details:</h2>\r\n                    <hr />\r\n                    <br/>\r\n                    \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                <tr>\r\n                    <th>Course</th>\r\n                    <th>Name of the Institution</th>\r\n                    <th>Year of Passing</th>\r\n                    <th>Percentage</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <tr>\r\n                    <td>B.tech (C.S.E)</td>\r\n                    <td>DNR College of Engineering and Technology</td>\r\n                    <td>Pursuing</td>\r\n                    <td>--</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Diploma (C.M.E)</td>\r\n                    <td>Smt.B.Seetha Polytechnic College</td>\r\n                    <td>2019</td>\r\n                    <td>87</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>S.S.C</td>\r\n                    <td>K.V.L.P.Z.P.H.School</td>\r\n                    <td>2016</td>\r\n                    <td>97</td>\r\n                </tr>\r\n                </tbody>\r\n                \r\n                </table>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n)\r\n}","import React  from 'react';\nimport Logo from './download.jpg';\nimport './App.css';\n//import hooks from './hooks';\nimport data from \"./data.json\";\nimport Resume from \"./components/Resume\"\nimport Homepage from \"./components/Homepage\"\nimport { BrowserRouter, Route,Link} from \"react-router-dom\";\n\n// import Welcome from './Welcome'\n// import { render } from '@testing-library/react';\n// import States from './States';                                            function =>no render class->render\n// function App(){\n//   class App extends Component {\n\n//   // return (\n//     render() {\n//       return (\n//     <div className=\"App\">\n            \n//             <Home />\n//       </div>\n//     );\n//   }\n\n\n\n// let =()=>{\n//   let profile=data.profile;\n//   console.log(profile);\n\n//   return(\n//     <div className=\"row justify-concent-center\">\n//       {profile.map((value,index)=>(\n//           <div className=\"col-sm-10 col-md-4 col-lg-4 mt-1\" key={index}>\n//             <div className=\"card\">\n//               <div className=\"card-body\">\n//                 <h1>{value.basic.name}</h1>\n//                 <h2 className=\"btn btn-primary\">profile</h2>\n//               </div>\n//             </div>\n//             </div>\n//       ))\n      \n  \n// }\n// </div>\n//   );\n// }\n\n\n\n\n// export default App;\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Route exact path=\"/\" data={Home} />\n      <Route path=\"/resume\" data={Resume}/>\n      <Route path=\"/homepage\" data={Homepage}/>\n      </BrowserRouter>\n      <Home />\n      \n    </div>\n  );\n}\n\n\n\nlet Home =()=>{    \n  let profile= data.profiles;\n  console.log(profile); \n\n  return(\n      <div className=\"row justify-content-center\">\n          {\n              profile.map((value,index)=>(\n                  <div className=\"col-sm-10 col-md-4 col-lg-4\" key={index}>\n                  <div className=\"card\">\n                      <div className=\"card-body\">\n                        <img src={Logo} alt=\"chiru\"/>\n                      <h1>{value.basic.name}</h1>\n                      <h2>{value.basic.role}</h2>\n                      <h3 onClick={() => window.location.href=\"tel:+919676578125\"}>{value.basic.phone}</h3>\n                      <h3 onClick={() => window.location.href=\"mailto:chiranjeevitati3@gmail.com\"} className=\"email link1\">{value.basic.email}</h3>\n\n                    \n                        \n                      {/* <button className=\"btn btn-primary\">Profile</button> */}\n                      {/* <Link onClick={event =>  window.location.href=''} className=\"btn btn-primary\">View Profile</Link> */}\n                      <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-primary\">View Profile</Link>\n                     \n            \n\n                      </div>\n                      \n\n                  </div>\n                  \n                  </div>\n\n              ))\n          }\n\n      </div>                     \n  );\n}\n\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}